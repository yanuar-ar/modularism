// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Modularity} from './Modularity.sol';

contract Vault is Modularity {

    constructor(Modules memory modules) Modularity(modules) {}


    ///////////////////////////////////////////////////////////////////////////////////////////////
    //                                 Initialize Module                                         //
    ///////////////////////////////////////////////////////////////////////////////////////////////

    function initialize(address owner) external useModuleWrite(MODULE_INITIALIZE) {}

    ///////////////////////////////////////////////////////////////////////////////////////////////
    //                                 Deposit Modules                                            //
    ///////////////////////////////////////////////////////////////////////////////////////////////

    function deposit(uint256 amount) external useModuleWrite(MODULE_DEPOSIT) {}
    
    ///////////////////////////////////////////////////////////////////////////////////////////////
    //                                 Withdraw Modules                                           //
    ///////////////////////////////////////////////////////////////////////////////////////////////

    function withdraw(uint256 amount) external useModuleWrite(MODULE_WITHDRAW) {}

    ///////////////////////////////////////////////////////////////////////////////////////////////
    //                                 Resolver Modules                                           //
    ///////////////////////////////////////////////////////////////////////////////////////////////

    function getOwner() external view useModuleView(MODULE_RESOLVER) returns (address) {}

    function balanceOf(address account) external view useModuleView(MODULE_RESOLVER) returns (uint256) {}
}
